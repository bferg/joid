#labels Phase-Deploy,Featured
This page will explain how to setup your own OpenID Server using JOID.

== Introduction ==

There are two pieces required to run the server:

  # A Store implementation - example: [http://joid.googlecode.com/svn/trunk/src/examples/server/MemoryStore.java MemoryStore]
  # A Servlet - example: [http://joid.googlecode.com/svn/trunk/src/examples/server/OpenIdServlet.java OpenIdServlet]

==Dependencies ==

You'll need the following in your classpath along with joid.jar.

  * log4j-X.jar
  * tsik.jar

==web.xml==

Add the servlet from above to your web.xml:

{{{
        <servlet>
		<servlet-name>loginServlet</servlet-name>
		<servlet-class>org.verisign.joid.server.OpenIdServlet</servlet-class>
		<init-param>
			<param-name>endPointUrl</param-name>
			<param-value>http://localhost:8080/joid/login</param-value>
			<description>Change this to your endpoint url.</description>
		</init-param>
		<init-param>
			<param-name>loginPage</param-name>
			<param-value>login.jsp</param-value>
			<description>Change this to your login page where the user enters their username and password and/or
				approves the authentication for the site.
			</description>
		</init-param>
	</servlet>

        <servlet-mapping>
		<servlet-name>loginServlet</servlet-name>
		<url-pattern>/login</url-pattern>
	</servlet-mapping>

}}}

Be sure to modify the init-params in the web.xml to the appropriate values.

== Login Page ==

You'll need some way for a user to login/authenticate themselves. There is a sample in /examples/server/login.jsp that simply asks the user to login and accept the Realm that is asking to authenticate.

== Running the Sample App ==

The sample app is both a consumer and a server. You can deploy it by dropping /out/joid.war into your TOMCAT_HOME/webapps directory. Then surf to http://localhost:8080/joid/ to try it out.